<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Дашборд - Домашняя бухгалтерия</title>
<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
<!-- Google Fonts -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
    :root {
        --primary-color: #5c6ac4;
        --primary-light: #f5f7ff;
        --secondary-color: #6b7280;
        --success-color: #10b981;
        --success-light: rgba(16, 185, 129, 0.1);
        --danger-color: #ef4444;
        --danger-light: rgba(239, 68, 68, 0.1);
        --warning-color: #f59e0b;
        --warning-light: rgba(245, 158, 11, 0.1);
        --info-color: #3b82f6;
        --info-light: rgba(59, 130, 246, 0.1);
        --dark-color: #111827;
        --light-color: #f9fafb;
        --border-color: #e5e7eb;
        --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.05);
        --transition: all 0.2s ease;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', sans-serif;
        color: var(--dark-color);
        background-color: #f3f4f6;
        line-height: 1.5;
    }

    .app-container {
        max-width: 1280px;
        margin: 0 auto;
        padding: 1.5rem;
    }

    .header {
        background-color: white;
        border-radius: 12px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        box-shadow: var(--card-shadow);
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .brand {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .brand-icon {
        font-size: 1.75rem;
        color: var(--primary-color);
    }

    .brand-title {
        font-weight: 600;
        font-size: 1.25rem;
        color: var(--dark-color);
        margin: 0;
    }

    .navigation {
        display: flex;
        align-items: center;
    }

    .nav-list {
        display: flex;
        list-style: none;
        margin: 0;
        padding: 0;
        gap: 0.5rem;
    }

    .nav-item a {
        display: block;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        text-decoration: none;
        color: var(--secondary-color);
        font-weight: 500;
        transition: var(--transition);
    }

    .nav-item a:hover {
        background-color: var(--primary-light);
        color: var(--primary-color);
    }

    .nav-item a.active {
        background-color: var(--primary-color);
        color: white;
    }

    .language-selector {
        display: flex;
        margin-left: 1rem;
    }

    .language-btn {
        background: none;
        border: none;
        padding: 0.25rem;
        border-radius: 0.25rem;
        opacity: 0.6;
        transition: var(--transition);
    }

    .language-btn.active {
        opacity: 1;
        border: 2px solid var(--primary-color);
    }

    .language-btn:hover {
        opacity: 1;
        background-color: var(--primary-light);
    }

    .language-btn img {
        width: 24px;
        height: 24px;
        border-radius: 4px;
    }

    .section {
        background-color: white;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: var(--card-shadow);
    }

    .section-title {
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        color: var(--dark-color);
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        font-weight: 500;
        border-radius: 0.5rem;
        padding: 0.625rem 1rem;
        transition: var(--transition);
        cursor: pointer;
        border: none;
    }

    .btn-primary {
        background-color: var(--primary-color);
        color: white;
    }

    .btn-primary:hover {
        background-color: #4c5aa9;
    }

    .btn-success {
        background-color: var(--success-color);
        color: white;
    }

    .btn-success:hover {
        background-color: #0da571;
    }

    .btn-danger {
        background-color: var(--danger-color);
        color: white;
    }

    .btn-danger:hover {
        background-color: #dc2626;
    }

    .btn-secondary {
        background-color: #e5e7eb;
        color: var(--dark-color);
    }

    .btn-secondary:hover {
        background-color: #d1d5db;
    }

    .btn-sm {
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
    }

    .btn-icon {
        width: 2.5rem;
        height: 2.5rem;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 0.5rem;
        background-color: white;
        color: var(--secondary-color);
        border: 1px solid var(--border-color);
        transition: var(--transition);
        font-size: 1.25rem;
    }

    .btn-icon:hover {
        background-color: #f9fafb;
        color: var(--primary-color);
    }

    .dashboard-welcome {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1.5rem;
    }

    .welcome-text h2 {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .welcome-text p {
        color: var(--secondary-color);
    }

    .date-filter {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .date-filter select {
        padding: 0.5rem;
        border-radius: 0.5rem;
        border: 1px solid var(--border-color);
        background-color: white;
        color: var(--dark-color);
        font-size: 0.875rem;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .stat-card {
        background-color: white;
        border-radius: 12px;
        padding: 1.25rem;
        box-shadow: var(--card-shadow);
        transition: var(--transition);
    }

    .stat-card:hover {
        transform: translateY(-4px);
    }

    .stat-icon {
        width: 3rem;
        height: 3rem;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 0.75rem;
        margin-bottom: 1rem;
        font-size: 1.5rem;
    }

    .stat-icon-income {
        background-color: var(--success-light);
        color: var(--success-color);
    }

    .stat-icon-expense {
        background-color: var(--danger-light);
        color: var(--danger-color);
    }

    .stat-icon-balance {
        background-color: var(--primary-light);
        color: var(--primary-color);
    }

    .stat-icon-savings {
        background-color: var(--info-light);
        color: var(--info-color);
    }

    .stat-title {
        font-size: 0.875rem;
        color: var(--secondary-color);
        margin-bottom: 0.5rem;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .stat-change {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        font-size: 0.75rem;
    }

    .stat-change-positive {
        color: var(--success-color);
    }

    .stat-change-negative {
        color: var(--danger-color);
    }

    .chart-container {
        position: relative;
        margin: auto;
        height: 300px;
        margin-bottom: 1.5rem;
    }

    .chart-grid {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .chart-card {
        background-color: white;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: var(--card-shadow);
    }

    .chart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .chart-title {
        font-size: 1.125rem;
        font-weight: 600;
    }

    .chart-legend {
        display: flex;
        gap: 1rem;
    }

    .legend-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
    }

    .legend-color {
        width: 0.75rem;
        height: 0.75rem;
        border-radius: 50%;
    }

    .legend-income {
        background-color: var(--success-color);
    }

    .legend-expense {
        background-color: var(--danger-color);
    }

    .transaction-list {
        margin-top: 1rem;
    }

    .transaction-item {
        display: flex;
        align-items: center;
        padding: 1rem;
        border-bottom: 1px solid var(--border-color);
        transition: var(--transition);
    }

    .transaction-item:last-child {
        border-bottom: none;
    }

    .transaction-item:hover {
        background-color: var(--light-color);
    }

    .transaction-icon {
        width: 2.5rem;
        height: 2.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 0.5rem;
        margin-right: 1rem;
        font-size: 1.25rem;
    }

    .transaction-icon-income {
        background-color: var(--success-light);
        color: var(--success-color);
    }

    .transaction-icon-expense {
        background-color: var(--danger-light);
        color: var(--danger-color);
    }

    .transaction-details {
        flex: 1;
    }

    .transaction-category {
        font-weight: 500;
        margin-bottom: 0.25rem;
    }

    .transaction-date {
        font-size: 0.75rem;
        color: var(--secondary-color);
    }

    .transaction-amount {
        font-weight: 600;
        text-align: right;
        white-space: nowrap;
    }

    .transaction-amount-income {
        color: var(--success-color);
    }

    .transaction-amount-expense {
        color: var(--danger-color);
    }

    .category-list {
        margin-top: 1rem;
    }

    .category-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0.75rem 0;
        border-bottom: 1px solid var(--border-color);
    }

    .category-item:last-child {
        border-bottom: none;
    }

    .category-name {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .category-icon {
        width: 2rem;
        height: 2rem;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 0.5rem;
        font-size: 1rem;
    }

    .category-icon-expense {
        background-color: var(--danger-light);
        color: var(--danger-color);
    }

    .category-label {
        font-weight: 500;
    }

    .category-amount {
        font-weight: 600;
    }

    .category-percentage {
        font-size: 0.75rem;
        color: var(--secondary-color);
    }

    .progress {
        height: 0.5rem;
        margin-top: 0.5rem;
        background-color: var(--light-color);
        border-radius: 1rem;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        border-radius: 1rem;
    }

    .progress-bar-expense {
        background-color: var(--danger-color);
    }

    .insights-card {
        background-color: white;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: var(--card-shadow);
        margin-bottom: 1.5rem;
    }

    .insights-header {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 1rem;
    }

    .insights-icon {
        width: 2.5rem;
        height: 2.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 0.5rem;
        font-size: 1.25rem;
        background-color: var(--primary-light);
        color: var(--primary-color);
    }

    .insights-title {
        font-size: 1.125rem;
        font-weight: 600;
    }

    .insights-list {
        margin-top: 1rem;
    }

    .insight-item {
        display: flex;
        align-items: flex-start;
        gap: 0.75rem;
        padding: 0.75rem 0;
        border-bottom: 1px solid var(--border-color);
    }

    .insight-item:last-child {
        border-bottom: none;
    }

    .insight-bullet {
        width: 1.5rem;
        height: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        font-size: 0.875rem;
        background-color: var(--primary-light);
        color: var(--primary-color);
        flex-shrink: 0;
        margin-top: 0.25rem;
    }

    .insight-content {
        flex: 1;
    }

    .insight-text {
        margin-bottom: 0.25rem;
    }

    .insight-action {
        font-size: 0.875rem;
        color: var(--primary-color);
        font-weight: 500;
        text-decoration: none;
    }

    .insight-action:hover {
        text-decoration: underline;
    }

    .footer {
        text-align: center;
        font-size: 0.875rem;
        color: var(--secondary-color);
        padding: 1.5rem 0;
        border-top: 1px solid var(--border-color);
    }

    /* Responsive adjustments */
    @media (max-width: 1200px) {
        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @media (max-width: 992px) {
        .chart-grid {
            grid-template-columns: 1fr;
        }

        .header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }

        .navigation {
            width: 100%;
            justify-content: space-between;
        }
    }

    @media (max-width: 768px) {
        .dashboard-welcome {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }

        .date-filter {
            width: 100%;
        }

        .date-filter select {
            flex: 1;
        }

        .nav-list {
            flex-wrap: wrap;
        }
    }

    @media (max-width: 576px) {
        .stats-grid {
            grid-template-columns: 1fr;
        }

        .chart-legend {
            flex-direction: column;
            gap: 0.5rem;
        }
    }
</style>
</head>
<body>
<div class="app-container">
    <header class="header">
        <div class="brand">
            <i class="bi bi-wallet2 brand-icon"></i>
            <h1 class="brand-title" data-lang="app_title">Домашняя бухгалтерия</h1>
        </div>
        <div class="navigation">
            <nav>
                <ul class="nav-list">
                    <li class="nav-item">
                        <a href="/v2/dashboard" class="active" data-lang="nav_dashboard">Дашборд</a>
                    </li>
                   <li class="nav-item">
                        <a href="/v2/calendar" data-lang="nav_calendar">Календарь</a>
                    </li>
                    <li class="nav-item">
                        <a href="/v2/reference/category" data-lang="nav_categories">Категории</a>
                    </li>
                    <li class="nav-item">
                        <a href="/v2" data-lang="nav_transactions">Операции</a>
                    </li>
                    <li class="nav-item">
                        <a href="/v2/auth" data-lang="nav_account">Аккаунт</a>
                    </li>
                </ul>
            </nav>
            <div class="language-selector">
                <button class="language-btn" onclick="changeLanguage('en')" title="English">
                    <img src="https://flagcdn.com/w40/gb.png" alt="English">
                </button>
                <button class="language-btn active" onclick="changeLanguage('ru')" title="Русский">
                    <img src="https://flagcdn.com/w40/ru.png" alt="Русский">
                </button>
                <button class="language-btn" onclick="changeLanguage('th')" title="ไทย">
                    <img src="https://flagcdn.com/w40/th.png" alt="ไทย">
                </button>
            </div>
        </div>
    </header>

    <!-- Dashboard Welcome Section -->
    <section class="section">
        <div class="dashboard-welcome">
            <div class="welcome-text">
                <h2 data-lang="dashboard_welcome">Финансовый обзор</h2>
                <p data-lang="dashboard_subtitle">Анализ ваших доходов и расходов</p>
            </div>
            <div class="date-filter">
                <select id="periodSelect" class="form-select">
                    <option value="month" data-lang="period_month">Этот месяц</option>
                    <option value="quarter" data-lang="period_quarter">Этот квартал</option>
                    <option value="year" data-lang="period_year">Этот год</option>
                    <option value="all" data-lang="period_all">Все время</option>
                </select>
            </div>
        </div>

        <!-- Stats Cards -->
        <div class="stats-grid">
            <!-- Income Card -->
            <div class="stat-card">
                <div class="stat-icon stat-icon-income">
                    <i class="bi bi-graph-up-arrow"></i>
                </div>
                <div class="stat-title" data-lang="total_income">Общий доход</div>
                <div class="stat-value">75,000 ₽</div>
                <div class="stat-change stat-change-positive">
                    <i class="bi bi-arrow-up"></i>
                    <span>12% <span data-lang="vs_last_period">по сравнению с прошлым периодом</span></span>
                </div>
            </div>

            <!-- Expense Card -->
            <div class="stat-card">
                <div class="stat-icon stat-icon-expense">
                    <i class="bi bi-graph-down-arrow"></i>
                </div>
                <div class="stat-title" data-lang="total_expense">Общий расход</div>
                <div class="stat-value">45,000 ₽</div>
                <div class="stat-change stat-change-negative">
                    <i class="bi bi-arrow-up"></i>
                    <span>8% <span data-lang="vs_last_period">по сравнению с прошлым периодом</span></span>
                </div>
            </div>

            <!-- Balance Card -->
            <div class="stat-card">
                <div class="stat-icon stat-icon-balance">
                    <i class="bi bi-wallet2"></i>
                </div>
                <div class="stat-title" data-lang="current_balance">Текущий баланс</div>
                <div class="stat-value">30,000 ₽</div>
                <div class="stat-change stat-change-positive">
                    <i class="bi bi-arrow-up"></i>
                    <span>18% <span data-lang="vs_last_period">по сравнению с прошлым периодом</span></span>
                </div>
            </div>

            <!-- Savings Card -->
            <div class="stat-card">
                <div class="stat-icon stat-icon-savings">
                    <i class="bi bi-piggy-bank"></i>
                </div>
                <div class="stat-title" data-lang="savings_rate">Норма сбережений</div>
                <div class="stat-value">40%</div>
                <div class="stat-change stat-change-positive">
                    <i class="bi bi-arrow-up"></i>
                    <span>5% <span data-lang="vs_last_period">по сравнению с прошлым периодом</span></span>
                </div>
            </div>
        </div>
    </section>

    <!-- Charts Section -->
    <div class="chart-grid">
        <!-- Income vs Expense Chart -->
        <div class="chart-card">
            <div class="chart-header">
                <div class="chart-title" data-lang="income_vs_expense">Доходы и расходы</div>
                <div class="chart-legend">
                    <div class="legend-item">
                        <div class="legend-color legend-income"></div>
                        <span data-lang="income">Доходы</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color legend-expense"></div>
                        <span data-lang="expense">Расходы</span>
                    </div>
                </div>
            </div>
            <div class="chart-container">
                <canvas id="incomeExpenseChart"></canvas>
            </div>
        </div>

        <!-- Expense Categories Chart -->
        <div class="chart-card">
            <div class="chart-header">
                <div class="chart-title" data-lang="expense_by_category">Расходы по категориям</div>
            </div>
            <div class="chart-container">
                <canvas id="categoryChart"></canvas>
            </div>
            <div class="category-list">
                <!-- Category Item -->
                <div class="category-item">
                    <div class="category-name">
                        <div class="category-icon category-icon-expense">
                            <i class="bi bi-cart"></i>
                        </div>
                        <div>
                            <div class="category-label" data-lang="expense_groceries">Продукты</div>
                            <div class="category-percentage">35%</div>
                        </div>
                    </div>
                    <div class="category-amount">15,750 ₽</div>
                </div>
                <!-- Category Item -->
                <div class="category-item">
                    <div class="category-name">
                        <div class="category-icon category-icon-expense">
                            <i class="bi bi-house"></i>
                        </div>
                        <div>
                            <div class="category-label" data-lang="expense_utilities">Коммунальные услуги</div>
                            <div class="category-percentage">25%</div>
                        </div>
                    </div>
                    <div class="category-amount">11,250 ₽</div>
                </div>
                <!-- Category Item -->
                <div class="category-item">
                    <div class="category-name">
                        <div class="category-icon category-icon-expense">
                            <i class="bi bi-bus-front"></i>
                        </div>
                        <div>
                            <div class="category-label" data-lang="expense_transport">Транспорт</div>
                            <div class="category-percentage">20%</div>
                        </div>
                    </div>
                    <div class="category-amount">9,000 ₽</div>
                </div>
                <!-- Category Item -->
                <div class="category-item">
                    <div class="category-name">
                        <div class="category-icon category-icon-expense">
                            <i class="bi bi-film"></i>
                        </div>
                        <div>
                            <div class="category-label" data-lang="expense_entertainment">Развлечения</div>
                            <div class="category-percentage">15%</div>
                        </div>
                    </div>
                    <div class="category-amount">6,750 ₽</div>
                </div>
                <!-- Category Item -->
                <div class="category-item">
                    <div class="category-name">
                        <div class="category-icon category-icon-expense">
                            <i class="bi bi-heart-pulse"></i>
                        </div>
                        <div>
                            <div class="category-label" data-lang="expense_health">Здоровье</div>
                            <div class="category-percentage">5%</div>
                        </div>
                    </div>
                    <div class="category-amount">2,250 ₽</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Monthly Trend Chart -->
    <section class="section">
        <div class="section-header">
            <h3 class="section-title" data-lang="monthly_trend">Ежемесячная динамика</h3>
        </div>
        <div class="chart-container">
            <canvas id="trendChart"></canvas>
        </div>
    </section>

    <!-- Recent Transactions -->
    <section class="section">
        <div class="section-header">
            <h3 class="section-title" data-lang="recent_transactions">Последние операции</h3>
            <a href="transactions.html" class="btn btn-sm btn-primary" data-lang="view_all">Смотреть все</a>
        </div>
        <div class="transaction-list">
            <!-- Transaction Item -->
            <div class="transaction-item">
                <div class="transaction-icon transaction-icon-expense">
                    <i class="bi bi-cart"></i>
                </div>
                <div class="transaction-details">
                    <div class="transaction-category" data-lang="expense_groceries">Продукты</div>
                    <div class="transaction-date">15 мая 2025</div>
                </div>
                <div class="transaction-amount transaction-amount-expense">-5,200 ₽</div>
            </div>
            <!-- Transaction Item -->
            <div class="transaction-item">
                <div class="transaction-icon transaction-icon-income">
                    <i class="bi bi-briefcase"></i>
                </div>
                <div class="transaction-details">
                    <div class="transaction-category" data-lang="income_salary">Зарплата</div>
                    <div class="transaction-date">10 мая 2025</div>
                </div>
                <div class="transaction-amount transaction-amount-income">+45,000 ₽</div>
            </div>
            <!-- Transaction Item -->
            <div class="transaction-item">
                <div class="transaction-icon transaction-icon-expense">
                    <i class="bi bi-house"></i>
                </div>
                <div class="transaction-details">
                    <div class="transaction-category" data-lang="expense_utilities">Коммунальные услуги</div>
                    <div class="transaction-date">5 мая 2025</div>
                </div>
                <div class="transaction-amount transaction-amount-expense">-8,500 ₽</div>
            </div>
            <!-- Transaction Item -->
            <div class="transaction-item">
                <div class="transaction-icon transaction-icon-expense">
                    <i class="bi bi-film"></i>
                </div>
                <div class="transaction-details">
                    <div class="transaction-category" data-lang="expense_entertainment">Развлечения</div>
                    <div class="transaction-date">3 мая 2025</div>
                </div>
                <div class="transaction-amount transaction-amount-expense">-3,200 ₽</div>
            </div>
            <!-- Transaction Item -->
            <div class="transaction-item">
                <div class="transaction-icon transaction-icon-income">
                    <i class="bi bi-laptop"></i>
                </div>
                <div class="transaction-details">
                    <div class="transaction-category" data-lang="income_freelance">Подработка</div>
                    <div class="transaction-date">1 мая 2025</div>
                </div>
                <div class="transaction-amount transaction-amount-income">+15,000 ₽</div>
            </div>
        </div>
    </section>

    <!-- Financial Insights -->
    <section class="insights-card">
        <div class="insights-header">
            <div class="insights-icon">
                <i class="bi bi-lightbulb"></i>
            </div>
            <div class="insights-title" data-lang="financial_insights">Финансовые инсайты</div>
        </div>
        <div class="insights-list">
            <!-- Insight Item -->
            <div class="insight-item">
                <div class="insight-bullet">
                    <i class="bi bi-1-circle"></i>
                </div>
                <div class="insight-content">
                    <div class="insight-text" data-lang="insight_spending">Ваши расходы на развлечения выросли на 20% по сравнению с прошлым месяцем. Рассмотрите возможность установки бюджета для этой категории.</div>
                    <a href="#" class="insight-action" data-lang="set_budget">Установить бюджет</a>
                </div>
            </div>
            <!-- Insight Item -->
            <div class="insight-item">
                <div class="insight-bullet">
                    <i class="bi bi-2-circle"></i>
                </div>
                <div class="insight-content">
                    <div class="insight-text" data-lang="insight_savings">Вы сэкономили 40% своего дохода в этом месяце, что выше вашей цели в 30%. Отличная работа!</div>
                    <a href="#" class="insight-action" data-lang="adjust_goal">Скорректировать цель</a>
                </div>
            </div>
            <!-- Insight Item -->
            <div class="insight-item">
                <div class="insight-bullet">
                    <i class="bi bi-3-circle"></i>
                </div>
                <div class="insight-content">
                    <div class="insight-text" data-lang="insight_recurring">У вас есть несколько повторяющихся платежей, которые можно автоматизировать для лучшего отслеживания.</div>
                    <a href="#" class="insight-action" data-lang="setup_recurring">Настроить повторяющиеся платежи</a>
                </div>
            </div>
        </div>
    </section>

    <footer class="footer">
        &copy; 2025 <span data-lang="app_title">Домашняя бухгалтерия</span>
    </footer>
</div>

<!-- Bootstrap JS Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Локализация и графики -->
<script>
    // Словари для разных языков
    const dictionaries = {
        ru: {
            // Общие
            app_title: "Домашняя бухгалтерия",
            nav_dashboard: "Дашборд",
            nav_categories: "Категории",
            nav_transactions: "Операции",
            nav_calendar: "Календарь",
            nav_account: "Аккаунт",

            // Дашборд
            dashboard_welcome: "Финансовый обзор",
            dashboard_subtitle: "Анализ ваших доходов и расходов",
            period_month: "Этот месяц",
            period_quarter: "Этот квартал",
            period_year: "Этот год",
            period_all: "Все время",

            // Статистика
            total_income: "Общий доход",
            total_expense: "Общий расход",
            current_balance: "Текущий баланс",
            savings_rate: "Норма сбережений",
            vs_last_period: "по сравнению с прошлым периодом",

            // Графики
            income_vs_expense: "Доходы и расходы",
            expense_by_category: "Расходы по категориям",
            monthly_trend: "Ежемесячная динамика",

            // Типы операций
            income: "Доходы",
            expense: "Расходы",

            // Категории доходов
            income_salary: "Зарплата",
            income_freelance: "Подработка",
            income_interest: "Проценты по вкладам",

            // Категории расходов
            expense_groceries: "Продукты",
            expense_utilities: "Коммунальные услуги",
            expense_transport: "Транспорт",
            expense_entertainment: "Развлечения",
            expense_health: "Здоровье",

            // Операции
            recent_transactions: "Последние операции",
            view_all: "Смотреть все",

            // Инсайты
            financial_insights: "Финансовые инсайты",
            insight_spending: "Ваши расходы на развлечения выросли на 20% по сравнению с прошлым месяцем. Рассмотрите возможность установки бюджета для этой категории.",
            insight_savings: "Вы сэкономили 40% своего дохода в этом месяце, что выше вашей цели в 30%. Отличная работа!",
            insight_recurring: "У вас есть несколько повторяющихся платежей, которые можно автоматизировать для лучшего отслеживания.",
            set_budget: "Установить бюджет",
            adjust_goal: "Скорректировать цель",
            setup_recurring: "Настроить повторяющиеся платежи",

            // Месяцы
            january: "Январь",
            february: "Февраль",
            march: "Март",
            april: "Апрель",
            may: "Май",
            june: "Июнь",
            july: "Июль",
            august: "Август",
            september: "Сентябрь",
            october: "Октябрь",
            november: "Ноябрь",
            december: "Декабрь"
        },
        en: {
            // General
            app_title: "Home Accounting",
            nav_dashboard: "Dashboard",
            nav_categories: "Categories",
            nav_transactions: "Transactions",
            nav_calendar: "Calendar",
            nav_account: "Account",

            // Dashboard
            dashboard_welcome: "Financial Overview",
            dashboard_subtitle: "Analysis of your income and expenses",
            period_month: "This Month",
            period_quarter: "This Quarter",
            period_year: "This Year",
            period_all: "All Time",

            // Statistics
            total_income: "Total Income",
            total_expense: "Total Expense",
            current_balance: "Current Balance",
            savings_rate: "Savings Rate",
            vs_last_period: "compared to last period",

            // Charts
            income_vs_expense: "Income vs Expense",
            expense_by_category: "Expenses by Category",
            monthly_trend: "Monthly Trend",

            // Transaction types
            income: "Income",
            expense: "Expenses",

            // Income categories
            income_salary: "Salary",
            income_freelance: "Freelance",
            income_interest: "Interest",

            // Expense categories
            expense_groceries: "Groceries",
            expense_utilities: "Utilities",
            expense_transport: "Transportation",
            expense_entertainment: "Entertainment",
            expense_health: "Healthcare",

            // Transactions
            recent_transactions: "Recent Transactions",
            view_all: "View All",

            // Insights
            financial_insights: "Financial Insights",
            insight_spending: "Your entertainment expenses have increased by 20% compared to last month. Consider setting a budget for this category.",
            insight_savings: "You saved 40% of your income this month, which is above your goal of 30%. Great job!",
            insight_recurring: "You have several recurring payments that can be automated for better tracking.",
            set_budget: "Set Budget",
            adjust_goal: "Adjust Goal",
            setup_recurring: "Setup Recurring Payments",

            // Months
            january: "January",
            february: "February",
            march: "March",
            april: "April",
            may: "May",
            june: "June",
            july: "July",
            august: "August",
            september: "September",
            october: "October",
            november: "November",
            december: "December"
        },
        th: {
            // ทั่วไป
            app_title: "บัญชีครัวเรือน",
            nav_dashboard: "แดชบอร์ด",
            nav_categories: "หมวดหมู่",
            nav_transactions: "ธุรกรรม",
            nav_calendar: "ปฏิทิน",
            nav_account: "บัญชีผู้ใช้",

            // แดชบอร์ด
            dashboard_welcome: "ภาพรวมทางการเงิน",
            dashboard_subtitle: "การวิเคราะห์รายรับและรายจ่ายของคุณ",
            period_month: "เดือนนี้",
            period_quarter: "ไตรมาสนี้",
            period_year: "ปีนี้",
            period_all: "ทั้งหมด",

            // สถิติ
            total_income: "รายรับทั้งหมด",
            total_expense: "รายจ่ายทั้งหมด",
            current_balance: "ยอดคงเหลือปัจจุบัน",
            savings_rate: "อัตราการออม",
            vs_last_period: "เทียบกับช่วงที่แล้ว",

            // กราฟ
            income_vs_expense: "รายรับเทียบกับรายจ่าย",
            expense_by_category: "รายจ่ายตามหมวดหมู่",
            monthly_trend: "แนวโน้มรายเดือน",

            // ประเภทธุรกรรม
            income: "รายรับ",
            expense: "รายจ่าย",

            // หมวดหมู่รายรับ
            income_salary: "เงินเดือน",
            income_freelance: "งานอิสระ",
            income_interest: "ดอกเบี้ย",

            // หมวดหมู่รายจ่าย
            expense_groceries: "ของชำ",
            expense_utilities: "สาธารณูปโภค",
            expense_transport: "การเดินทาง",
            expense_entertainment: "ความบันเทิง",
            expense_health: "สุขภาพ",

            // ธุรกรรม
            recent_transactions: "ธุรกรรมล่าสุด",
            view_all: "ดูทั้งหมด",

            // ข้อมูลเชิงลึก
            financial_insights: "ข้อมูลเชิงลึกทางการเงิน",
            insight_spending: "ค่าใช้จ่ายด้านความบันเทิงของคุณเพิ่มขึ้น 20% เมื่อเทียบกับเดือนที่แล้ว พิจารณาการตั้งงบประมาณสำหรับหมวดหมู่นี้",
            insight_savings: "คุณประหยัดได้ 40% ของรายได้ในเดือนนี้ ซึ่งสูงกว่าเป้าหมายของคุณที่ 30% ทำได้ดีมาก!",
            insight_recurring: "คุณมีการชำระเงินที่เกิดขึ้นซ้ำหลายรายการซึ่งสามารถทำให้เป็นอัตโนมัติเพื่อการติดตามที่ดีขึ้น",
            set_budget: "ตั้งงบประมาณ",
            adjust_goal: "ปรับเป้าหมาย",
            setup_recurring: "ตั้งค่าการชำระเงินที่เกิดขึ้นซ้ำ",

            // เดือน
            january: "มกราคม",
            february: "กุมภาพันธ์",
            march: "มีนาคม",
            april: "เมษายน",
            may: "พฤษภาคม",
            june: "มิถุนายน",
            july: "กรกฎาคม",
            august: "สิงหาคม",
            september: "กันยายน",
            october: "ตุลาคม",
            november: "พฤศจิกายน",
            december: "ธันวาคม"
        }
    };

    // Текущий язык (по умолчанию русский)
    let currentLang = 'ru';

    // Функция для изменения языка
    function changeLanguage(lang) {
        if (!dictionaries[lang]) return;

        currentLang = lang;

        // Обновляем атрибут lang у html
        document.documentElement.lang = lang;

        // Обновляем активную кнопку языка
        document.querySelectorAll('.language-btn').forEach(btn => {
            btn.classList.remove('active');
        });
        document.querySelector(`.language-btn[onclick="changeLanguage('${lang}')"]`).classList.add('active');

        // Обновляем все элементы с атрибутом data-lang
        document.querySelectorAll('[data-lang]').forEach(element => {
            const key = element.getAttribute('data-lang');
            if (dictionaries[lang][key]) {
                element.textContent = dictionaries[lang][key];
            }
        });

        // Обновляем графики
        updateCharts();
    }

    // Данные для графиков
    const chartData = {
        incomeExpense: {
            labels: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн'],
            datasets: [
                {
                    label: 'Доходы',
                    data: [65000, 59000, 80000, 81000, 75000, 70000],
                    backgroundColor: 'rgba(16, 185, 129, 0.2)',
                    borderColor: 'rgba(16, 185, 129, 1)',
                    borderWidth: 2,
                    tension: 0.4,
                    fill: true
                },
                {
                    label: 'Расходы',
                    data: [45000, 49000, 52000, 47000, 45000, 50000],
                    backgroundColor: 'rgba(239, 68, 68, 0.2)',
                    borderColor: 'rgba(239, 68, 68, 1)',
                    borderWidth: 2,
                    tension: 0.4,
                    fill: true
                }
            ]
        },
        categories: {
            labels: ['Продукты', 'Коммунальные услуги', 'Транспорт', 'Развлечения', 'Здоровье'],
            datasets: [
                {
                    data: [35, 25, 20, 15, 5],
                    backgroundColor: [
                        'rgba(239, 68, 68, 0.8)',
                        'rgba(59, 130, 246, 0.8)',
                        'rgba(245, 158, 11, 0.8)',
                        'rgba(16, 185, 129, 0.8)',
                        'rgba(139, 92, 246, 0.8)'
                    ],
                    borderWidth: 0
                }
            ]
        },
        trend: {
            labels: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
            datasets: [
                {
                    label: 'Доходы',
                    data: [65000, 59000, 80000, 81000, 75000, 70000, 72000, 78000, 82000, 85000, 90000, 95000],
                    backgroundColor: 'rgba(16, 185, 129, 0.2)',
                    borderColor: 'rgba(16, 185, 129, 1)',
                    borderWidth: 2,
                    type: 'line',
                    tension: 0.4,
                    yAxisID: 'y'
                },
                {
                    label: 'Расходы',
                    data: [45000, 49000, 52000, 47000, 45000, 50000, 48000, 53000, 55000, 59000, 62000, 65000],
                    backgroundColor: 'rgba(239, 68, 68, 0.2)',
                    borderColor: 'rgba(239, 68, 68, 1)',
                    borderWidth: 2,
                    type: 'line',
                    tension: 0.4,
                    yAxisID: 'y'
                },
                {
                    label: 'Баланс',
                    data: [20000, 10000, 28000, 34000, 30000, 20000, 24000, 25000, 27000, 26000, 28000, 30000],
                    backgroundColor: 'rgba(92, 106, 196, 0.6)',
                    borderColor: 'rgba(92, 106, 196, 0)',
                    borderWidth: 0,
                    type: 'bar',
                    yAxisID: 'y1'
                }
            ]
        }
    };

    // Функция для получения локализованных меток
    function getLocalizedLabels(type) {
        if (type === 'months') {
            return [
                dictionaries[currentLang].january.substring(0, 3),
                dictionaries[currentLang].february.substring(0, 3),
                dictionaries[currentLang].march.substring(0, 3),
                dictionaries[currentLang].april.substring(0, 3),
                dictionaries[currentLang].may.substring(0, 3),
                dictionaries[currentLang].june.substring(0, 3),
                dictionaries[currentLang].july.substring(0, 3),
                dictionaries[currentLang].august.substring(0, 3),
                dictionaries[currentLang].september.substring(0, 3),
                dictionaries[currentLang].october.substring(0, 3),
                dictionaries[currentLang].november.substring(0, 3),
                dictionaries[currentLang].december.substring(0, 3)
            ];
        } else if (type === 'categories') {
            return [
                dictionaries[currentLang].expense_groceries,
                dictionaries[currentLang].expense_utilities,
                dictionaries[currentLang].expense_transport,
                dictionaries[currentLang].expense_entertainment,
                dictionaries[currentLang].expense_health
            ];
        }
        return [];
    }

    // Графики
    let incomeExpenseChart;
    let categoryChart;
    let trendChart;

    // Функция для инициализации графиков
    function initCharts() {
        // График доходов и расходов
        const incomeExpenseCtx = document.getElementById('incomeExpenseChart').getContext('2d');
        incomeExpenseChart = new Chart(incomeExpenseCtx, {
            type: 'line',
            data: {
                labels: getLocalizedLabels('months').slice(0, 6),
                datasets: [
                    {
                        label: dictionaries[currentLang].income,
                        data: chartData.incomeExpense.datasets[0].data,
                        backgroundColor: chartData.incomeExpense.datasets[0].backgroundColor,
                        borderColor: chartData.incomeExpense.datasets[0].borderColor,
                        borderWidth: chartData.incomeExpense.datasets[0].borderWidth,
                        tension: chartData.incomeExpense.datasets[0].tension,
                        fill: chartData.incomeExpense.datasets[0].fill
                    },
                    {
                        label: dictionaries[currentLang].expense,
                        data: chartData.incomeExpense.datasets[1].data,
                        backgroundColor: chartData.incomeExpense.datasets[1].backgroundColor,
                        borderColor: chartData.incomeExpense.datasets[1].borderColor,
                        borderWidth: chartData.incomeExpense.datasets[1].borderWidth,
                        tension: chartData.incomeExpense.datasets[1].tension,
                        fill: chartData.incomeExpense.datasets[1].fill
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        mode: 'index',
                        intersect: false,
                        callbacks: {
                            label: function(context) {
                                let label = context.dataset.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                if (context.parsed.y !== null) {
                                    label += new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB', maximumFractionDigits: 0 }).format(context.parsed.y);
                                }
                                return label;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return value.toLocaleString() + ' ₽';
                            }
                        }
                    }
                }
            }
        });

        // График категорий расходов
        const categoryCtx = document.getElementById('categoryChart').getContext('2d');
        categoryChart = new Chart(categoryCtx, {
            type: 'doughnut',
            data: {
                labels: getLocalizedLabels('categories'),
                datasets: [
                    {
                        data: chartData.categories.datasets[0].data,
                        backgroundColor: chartData.categories.datasets[0].backgroundColor,
                        borderWidth: chartData.categories.datasets[0].borderWidth
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.parsed || 0;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return `${label}: ${percentage}%`;
                            }
                        }
                    }
                },
                cutout: '70%'
            }
        });

        // График ежемесячной динамики
        const trendCtx = document.getElementById('trendChart').getContext('2d');
        trendChart = new Chart(trendCtx, {
            type: 'bar',
            data: {
                labels: getLocalizedLabels('months'),
                datasets: [
                    {
                        label: dictionaries[currentLang].income,
                        data: chartData.trend.datasets[0].data,
                        backgroundColor: chartData.trend.datasets[0].backgroundColor,
                        borderColor: chartData.trend.datasets[0].borderColor,
                        borderWidth: chartData.trend.datasets[0].borderWidth,
                        type: chartData.trend.datasets[0].type,
                        tension: chartData.trend.datasets[0].tension,
                        yAxisID: chartData.trend.datasets[0].yAxisID
                    },
                    {
                        label: dictionaries[currentLang].expense,
                        data: chartData.trend.datasets[1].data,
                        backgroundColor: chartData.trend.datasets[1].backgroundColor,
                        borderColor: chartData.trend.datasets[1].borderColor,
                        borderWidth: chartData.trend.datasets[1].borderWidth,
                        type: chartData.trend.datasets[1].type,
                        tension: chartData.trend.datasets[1].tension,
                        yAxisID: chartData.trend.datasets[1].yAxisID
                    },
                    {
                        label: dictionaries[currentLang].current_balance,
                        data: chartData.trend.datasets[2].data,
                        backgroundColor: chartData.trend.datasets[2].backgroundColor,
                        borderColor: chartData.trend.datasets[2].borderColor,
                        borderWidth: chartData.trend.datasets[2].borderWidth,
                        type: chartData.trend.datasets[2].type,
                        yAxisID: chartData.trend.datasets[2].yAxisID
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top'
                    },
                    tooltip: {
                        mode: 'index',
                        intersect: false,
                        callbacks: {
                            label: function(context) {
                                let label = context.dataset.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                if (context.parsed.y !== null) {
                                    label += new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB', maximumFractionDigits: 0 }).format(context.parsed.y);
                                }
                                return label;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        type: 'linear',
                        display: true,
                        position: 'left',
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return value.toLocaleString() + ' ₽';
                            }
                        }
                    },
                    y1: {
                        type: 'linear',
                        display: true,
                        position: 'right',
                        beginAtZero: true,
                        grid: {
                            drawOnChartArea: false
                        },
                        ticks: {
                            callback: function(value) {
                                return value.toLocaleString() + ' ₽';
                            }
                        }
                    }
                }
            }
        });
    }

    // Функция для обновления графиков при изменении языка
    function updateCharts() {
        if (incomeExpenseChart) {
            incomeExpenseChart.data.labels = getLocalizedLabels('months').slice(0, 6);
            incomeExpenseChart.data.datasets[0].label = dictionaries[currentLang].income;
            incomeExpenseChart.data.datasets[1].label = dictionaries[currentLang].expense;
            incomeExpenseChart.update();
        }

        if (categoryChart) {
            categoryChart.data.labels = getLocalizedLabels('categories');
            categoryChart.update();
        }

        if (trendChart) {
            trendChart.data.labels = getLocalizedLabels('months');
            trendChart.data.datasets[0].label = dictionaries[currentLang].income;
            trendChart.data.datasets[1].label = dictionaries[currentLang].expense;
            trendChart.data.datasets[2].label = dictionaries[currentLang].current_balance;
            trendChart.update();
        }
    }

    // Инициализация при загрузке страницы
    document.addEventListener('DOMContentLoaded', function() {
        // Проверяем, есть ли сохраненный язык в localStorage
        const savedLang = localStorage.getItem('preferredLanguage');
        if (savedLang && dictionaries[savedLang]) {
            changeLanguage(savedLang);
        } else {
            // Если нет сохраненного языка, используем язык браузера или русский по умолчанию
            const browserLang = navigator.language.split('-')[0];
            if (dictionaries[browserLang]) {
                changeLanguage(browserLang);
            } else {
                changeLanguage('ru');
            }
        }

        // Инициализируем графики
        initCharts();

        // Добавляем обработчик события для изменения периода
        document.getElementById('periodSelect').addEventListener('change', function() {
            // Здесь будет логика изменения данных в зависимости от выбранного периода
            alert('Функция изменения периода будет реализована на сервере');
        });
    });

    // Сохраняем выбранный язык в localStorage при изменении
    const originalChangeLanguage = changeLanguage;
    changeLanguage = function(lang) {
        originalChangeLanguage(lang);
        localStorage.setItem('preferredLanguage', lang);
    };
</script>
</body>
</html>